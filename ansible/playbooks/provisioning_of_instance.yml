- name: Provisioning of todo app in instance
  hosts: localhost
  gather_facts: true

  tasks:
    - name: creating a security group
      amazon.aws.ec2_security_group:
        name: todo-security
        description: creating a security group for ec2 instance
        rules:
        - proto: tcp
          from_port: 22
          to_port: 22
          cidr_ip: 0.0.0.0/0
        - proto: tcp
          from_port: 8080
          to_port: 8080
          cidr_ip: 0.0.0.0/0
        - proto: tcp
          from_port: 80
          to_port: 80
          cidr_ip: 0.0.0.0/0
        rules_egress:
            - proto: all
              cidr_ip: 0.0.0.0/0
      register: ec2_security

    - name: Lunching a ec2 instance
      amazon.aws.ec2_instance:
        name: todo-app
        instance_type: t2.micro
        region: ap-south-1
        image_id: ami-0af9569868786b23a 
        key_name: test-demo
        security_group: "{{ ec2_security.group_id }}"

        count: 1
      register: ec2

    - name: wait for the instance to lunch.
      wait_for:
        host: "{{ ec2.instance[0].public_dns_name }}"
        port: 22
        delay: 30
        timeout: 300
        state: started
      when: ec2.instance is defined and ec2.instance | length > 0

    - name: Add ec2 instance to dynamic inventory
      add_host:
        name: "{{ ec2.instance[1].public_dns_name }}"
        groups: lunched_ec2_instances
        ansible_ssh_private_key_file: "{{ ec2_ssh_key_path }}"
        ansible_user: ec2-user
  
    - name: debug ssh private key 
      debug:
      var: ec2_ssh_key_path
    - name: debug dynamic inventory
      debug:
      var: groups['lunched_ec2_instances']
  
  # tasks:
  # - name: installing apache packages
  #   become: yes
  #   package:
  #     name: httpd
  #     state: present
  # - name: starting a the apache server
  #   become: yes
  #   service:
  #     name: httpd
  #     enabled: yes


